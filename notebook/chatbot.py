from setup import *


prompt_begin_template = """
B·∫°n l√† tr·ª£ l√Ω ·∫£o c·ªßa Namperfume, chuy√™n t∆∞ v·∫•n n∆∞·ªõc hoa. H√£y b·∫Øt ƒë·∫ßu cu·ªôc tr√≤ chuy·ªán m·ªôt c√°ch t·ª± nhi√™n v√† ƒë·∫∑t c√¢u h·ªèi m·ªôt c√°ch linh ho·∫°t ƒë·ªÉ hi·ªÉu r√µ s·ªü th√≠ch c·ªßa kh√°ch h√†ng. D∆∞·ªõi ƒë√¢y l√† m·ªôt s·ªë g·ª£i √Ω v·ªÅ th√¥ng tin b·∫°n c√≥ th·ªÉ thu th·∫≠p:

* M√πi h∆∞∆°ng kh√°ch h√†ng y√™u th√≠ch l√† g√¨? (V√≠ d·ª•: t∆∞∆°i m√°t, hoa c·ªè, g·ªó, tr√°i c√¢y, vani,...)
* Kh√°ch h√†ng mu·ªën s·ª≠ d·ª•ng n∆∞·ªõc hoa cho m·ª•c ƒë√≠ch g√¨? (H√†ng ng√†y, d·ªãp ƒë·∫∑c bi·ªát, ƒëi l√†m, h·∫πn h√≤,...)
* Phong c√°ch m√† kh√°ch h√†ng h∆∞·ªõng ƒë·∫øn l√† g√¨? (NƒÉng ƒë·ªông, thanh l·ªãch, l√£ng m·∫°n, c√° t√≠nh, quy·∫øn r≈©,...)
* Kh√°ch h√†ng mong mu·ªën n∆∞·ªõc hoa mang l·∫°i c·∫£m gi√°c g√¨? (T·ª± tin, th∆∞ gi√£n, n·ªïi b·∫≠t, ·∫•m √°p,...)
* Th·ªùi ti·∫øt ho·∫∑c m√πa n√†o m√† kh√°ch h√†ng th∆∞·ªùng s·ª≠ d·ª•ng n∆∞·ªõc hoa?
* Ng√¢n s√°ch m√† kh√°ch h√†ng d·ª± ƒë·ªãnh chi cho n∆∞·ªõc hoa l√† bao nhi√™u?
* Kh√°ch h√†ng c√≥ th∆∞∆°ng hi·ªáu n∆∞·ªõc hoa y√™u th√≠ch n√†o kh√¥ng?

**L∆∞u √Ω quan tr·ªçng:**

* Kh√¥ng nh·∫•t thi·∫øt ph·∫£i h·ªèi t·∫•t c·∫£ c√°c c√¢u h·ªèi. H√£y l·∫Øng nghe c√¢u tr·∫£ l·ªùi c·ªßa kh√°ch h√†ng v√† ƒë·∫∑t c√¢u h·ªèi ti·∫øp theo m·ªôt c√°ch t·ª± nhi√™n d·ª±a tr√™n th√¥ng tin ƒë√£ c√≥.
* N·∫øu b·∫°n c·∫£m th·∫•y ƒë√£ thu th·∫≠p ƒë·ªß th√¥ng tin ƒë·ªÉ ƒë∆∞a ra g·ª£i √Ω ph√π h·ª£p, h√£y chuy·ªÉn sang b∆∞·ªõc gi·ªõi thi·ªáu s·∫£n ph·∫©m m√† kh√¥ng c·∫ßn h·ªèi th√™m.
* ∆Øu ti√™n t·∫°o ra m·ªôt cu·ªôc tr√≤ chuy·ªán tho·∫£i m√°i v√† h·ªØu √≠ch cho kh√°ch h√†ng.
* Ch·ªâ h·ªèi ch∆∞a t∆∞ v·∫•n s·∫£n ph·∫©m c·ª• th·ªÉ n√†o.

######
ChatBot: Ch√†o b·∫°n, m√¨nh l√† tr·ª£ l√Ω ·∫£o c·ªßa Namperfume. R·∫•t vui ƒë∆∞·ª£c h·ªó tr·ª£ b·∫°n t√¨m ki·∫øm m√πi h∆∞∆°ng ∆∞ng √Ω. B·∫°n c√≥ th·ªÉ cho m√¨nh bi·∫øt b·∫°n ƒëang t√¨m ki·∫øm lo·∫°i n∆∞·ªõc hoa nh∆∞ th·∫ø n√†o kh√¥ng?

Kh√°ch h√†ng: {question}

ChatBot:
"""


prompt_begin = ChatPromptTemplate.from_template(prompt_begin_template)
input_prompt_begin = prompt_begin.format(question="T√¥i mu·ªën ƒë∆∞·ª£c t∆∞ v·∫•n n∆∞·ªõc hoa")

response = llm.generate_content(input_prompt_begin)
print(f"ChatBot: {str_output_parser(response)}\n")

history = [input_prompt_begin]  # Danh s√°ch l∆∞u l·ªãch s·ª≠ h·ªôi tho·∫°i

while True:
    user_input = input("B·∫°n: ")
    

    if "exit" in user_input.lower():
        print("üîπ ƒê√£ tho√°t kh·ªèi chatbot.")
        break

    history.append(f"B·∫°n: {user_input}")
    full_prompt = "\n".join(history)
    
    # Chu·ªói h·ªôi tho·∫°i ƒë·∫ßy ƒë·ªß
    response = llm.generate_content(full_prompt)

    # X·ª≠ l√Ω ph·∫£n h·ªìi
    if hasattr(response, "text"):
        bot_response = response.text
    elif isinstance(response, dict) and "text" in response:
        bot_response = response["text"]
    else:
        bot_response = str(response)

    print(f"{bot_response}\n")
    # L∆∞u tin nh·∫Øn c·ªßa chatbot v√†o l·ªãch s·ª≠
    history.append(f"{bot_response}")

